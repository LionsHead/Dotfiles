[core]
  pager = less -F -X
  excludesfile = ~/.gitignore_global

[include]
  path = ~/.gitconfig_local

[includeIf "gitdir:/Users/user/Work/**"]
    path = ~/Work/.gitconfig

[credential]
    helper = osxkeychain

[color]
  diff = auto
  status = auto
  branch = auto
  ui = true

[push]
  # Make `git push` push relevant annotated tags when pushing branches out.
  followTags = true
  # Automatically set origin as the remote for current branch
  autoSetupRemote = true

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
  required = true
	process = git-lfs filter-process

[alias]
  # List aliases
  aliases = config --get-regexp alias

  ################################ Branches
  m = merge --no-ff
  up = pull --rebase
  poh = push origin head
  co = checkout
  br = branch -v
  brs = for-each-ref --sort=-committerdate --count=20 refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  # Set remote origin
  set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
	# Switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
  # Remove branches that have already been merged with master
  del-merged = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
  # View branches that don't merged with develop
  no-merged = branch -r -v --no-merged origin/develop

  # squash all your commits to master"
  remaster = !"git reset $(git merge-base master $(git branch --show-current)) "
  redev = !"git reset $(git merge-base develop $(git branch --show-current)) "

  ################################ Changes
  unstage = reset HEAD --
  discard = reset --hard HEAD
  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
  diffc = diff --cached
  # View the current working tree status using the short format
  s = status -s

  ################################ Commits
  c = commit
  # Commit all changes
  cam = !git add -A && git commit -avm
  # Squash commits
  squash = rebase --interactive --autosquash
  # Amend the currently staged files to the latest commit
  amend = !git add -A && git commit --amend --no-edit

  ################################ History
  # Show last tag
  ltag = ! bash -c 'git tag -l | sort -V | tail -1'
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  last = log --pretty=oneline -n 20 --graph --abbrev-commit --date=short
  # Short log
  l = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
